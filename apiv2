<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MX Flix - Repositório de Filmes</title>

    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f3f3f3;
        }

        header {
            text-align: center;
            margin-bottom: 20px;
        }

        h1 {
            color: #333;
        }

        ul {
            list-style-type: none;
            padding: 0;
        }

        li {
            border: 1px solid #ddd;
            margin: 5px 0;
            padding: 10px;
            border-radius: 5px;
            background-color: #fff;
        }

        input[type="text"] {
            padding: 5px;
            width: 100%;
            box-sizing: border-box;
        }

        #tvControlInfo {
            background: #f8d7da;
            color: #721c24;
            padding: 15px;
            border-radius: 5px;
            margin-bottom: 20px;
            text-align: center;
        }

        #dialogOverlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            justify-content: center;
            align-items: center;
        }

        #dialogContent {
            background: #fff;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
            max-width: 80%;
            max-height: 80%;
            text-align: center;
            overflow: auto;
        }

        #closeDialog {
            position: absolute;
            top: 10px;
            right: 10px;
            cursor: pointer;
        }

        #credits {
            text-align: center;
            margin-top: 20px;
            color: #888;
        }
    </style>
</head>
<body>
    <div id="tvControlInfo">
        <p>Recomendamos o uso do navegador Brave para uma experiência mais segura e rápida.</p>
    </div>

    <header>
        <h1>MX Flix - Repositório de Filmes</h1>
    </header>

    <label for="searchInput">Buscar por qualquer campo:</label>
    <input type="text" id="searchInput" oninput="searchMovies()">

    <ul id="jsonList"></ul>

    <div id="dialogOverlay" onclick="closeDialog()">
        <div id="dialogContent">
            <span id="closeDialog" onclick="closeDialog()">X</span>
            <iframe id="videoFrame" width="100%" height="100%" frameborder="0" allowfullscreen></iframe>
            <button onclick="copyToClipboard()">Copiar URL</button>
            <div id="credits">
                <p>@MX FLIX OFC</p>
            </div>
        </div>
    </div>

    <script>
        const apiUrl = 'https://raw.githubusercontent.com/mxfliofc/repomx/main/api-json-mx-flix';

        fetch(apiUrl)
            .then(response => response.json())
            .then(data => {
                const jsonList = document.getElementById('jsonList');

                // Iterar sobre os dados e adicionar à lista
                for (const key in data) {
                    if (Object.hasOwnProperty.call(data, key)) {
                        const movieInfo = data[key];
                        
                        const listItem = document.createElement('li');
                        listItem.innerHTML = `
                            <strong>${key}</strong><br>
                            Filmes: ${movieInfo.filmes}<br>
                            Nome: ${movieInfo.nome}<br>
                            <button onclick="openDialog('${movieInfo.player}')">Assistir</button>
                            Tipo: ${movieInfo.tipo}
                        `;

                        jsonList.appendChild(listItem);
                    }
                }
            })
            .catch(error => {
                console.error('Erro ao recuperar JSON via API:', error);
            });

        function searchMovies() {
            const input = document.getElementById('searchInput');
            const filter = input.value.toUpperCase();
            const ul = document.getElementById('jsonList');
            const li = ul.getElementsByTagName('li');

            // Iterar sobre os itens da lista e ocultar/mostrar conforme a busca
            for (let i = 0; i < li.length; i++) {
                const listItem = li[i];
                const txtValue = listItem.textContent || listItem.innerText;

                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    li[i].style.display = '';
                } else {
                    li[i].style.display = 'none';
                }
            }
        }

        function openDialog(videoUrl) {
            const dialogOverlay = document.getElementById('dialogOverlay');
            const videoFrame = document.getElementById('videoFrame');

            // Substituir 'v' por 'e' na URL do vídeo
            const modifiedVideoUrl = videoUrl.replace(/\/v\//g, '/e/');
            
            videoFrame.src = modifiedVideoUrl;
            dialogOverlay.style.display = 'flex';
        }

        function closeDialog() {
            const dialogOverlay = document.getElementById('dialogOverlay');
            const videoFrame = document.getElementById('videoFrame');

            videoFrame.src = '';
            dialogOverlay.style.display = 'none';
        }

        function copyToClipboard() {
            const videoFrame = document.getElementById('videoFrame');
            const textArea = document.createElement('textarea');
            textArea.value = videoFrame.src;
            document.body.appendChild(textArea);
            textArea.select();
            document.execCommand('copy');
            document.body.removeChild(textArea);

            alert('URL copiada para a área de transferência.');
        }
    </script>
</body>
</html>
